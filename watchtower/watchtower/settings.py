# """
# Django settings for watchtower project.
#
# Generated by 'django-admin startproject' using Django 3.1.3.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/3.1/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/3.1/ref/settings/
# """
#
from pathlib import Path

LOAD_DOTENV = True
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# ALLOWED_HOSTS = []
#
#
# # Application definition
#
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',
    'otp_yubikey',
    'wachturm',
    'maintenance_mode'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',  # Must come after 'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'maintenance_mode.middleware.MaintenanceModeMiddleware',
]

ROOT_URLCONF = 'watchtower.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'maintenance_mode.context_processors.maintenance_mode'
            ],
        },
    },
]

WSGI_APPLICATION = 'watchtower.wsgi.application'

#
# # Database
# # https://docs.djangoproject.com/en/3.1/ref/settings/#databases
#

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
#
#
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

#
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

LOGIN_URL= 'two_factor:login'
LOGIN_REDIRECT_URL= 'two_factor:profile'

# HERE STARTS DYNACONF EXTENSION LOAD (Keep at the very bottom of settings.py)
# Read more at https://dynaconf.readthedocs.io/en/latest/guides/django.html
# and watch https://www.youtube.com/watch?v=Ms2kgfYZJ9M&t=2915s&ab_channel=CodeShow

import dynaconf  # noqa
settings = dynaconf.DjangoDynaconf(
    __name__,
    CORE_LOADERS_FOR_DYNACONF=['YAML'],
    DOTENV_OVERRIDE_FOR_DYNACONF=False,
    #DOTENV_PATH=
    MERGE_ENABLED_FOR_DYNACONF=False,
    ENCODING_FOR_DYNACONF='utf-8',
    #ENV=development
    ENVVAR_PREFIX_FOR_DYNACONF='WATCHTOWER',
    ENV_SWITCHER_FOR_DYNACONF='WATCHTOWER_ENV',
    #PRELOAD_FOR_DYNACONF=["/path/*", "other/settings.toml"],                # <-- Loaded first
    SETTINGS_FILE_FOR_DYNACONF="settings.yaml",                              # <-- Loaded second (the main file)
    #INCLUDES_FOR_DYNACONF=["other.module.settings", "other/settings.yaml"]  # <-- Loaded at the end
    SECRETS_FOR_DYNACONF='.secrets.yaml',
    SILENT_ERRORS_FOR_DYNACONF=False
)
# HEREENDS DYNACONF EXTENSION LOAD (No more code below this line)

import logging.config
logging.config.dictConfig(settings.LOGGING)
logger = logging.getLogger('watchtower')

logger.info('Using {} configuration'.format(settings.current_env))